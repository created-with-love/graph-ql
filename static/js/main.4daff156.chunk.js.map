{"version":3,"sources":["db.js","Query.js","RepoInfo.js","SearchBox.js","NavButtons.js","useData.js","App.js","index.js"],"names":["github","headers","Authorization","baseURL","username","githubQuery","pageCount","queryString","paginationKeyword","paginationString","query","RepoInfo","license","repo","licenseInfo","spdxId","undefined","className","style","fontSize","href","url","name","description","viewerSubscription","id","toString","SearchBox","totalCount","onTotalChange","onQueryChange","htmlFor","type","value","onChange","event","target","min","max","NavButtons","start","end","next","previous","onPage","onClick","useData","useState","userName","setUserName","repoList","setRepoList","setPageCount","setQueryString","setTotalCount","startCursor","setStartCursor","endCursor","setEndCursor","hasPreviousPage","setHasPreviousPage","hasNextPage","setHasNextPage","setPaginationKeyword","setPaginationString","fetchData","useCallback","queryText","JSON","stringify","fetch","method","body","then","response","json","data","viewer","repos","search","edges","total","repositoryCount","pageInfo","prev","catch","err","console","log","useEffect","App","myNumber","myString","myKeyword","map","node","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4daff156.chunk.js","sourcesContent":["const github = {\r\n  headers : {\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization: \"bearer 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\"\r\n  },\r\n  baseURL: 'https://api.github.com/graphql',\r\n  username: 'created-with-love'\r\n}\r\n\r\nexport default github;","const githubQuery = (\r\n  pageCount,\r\n  queryString,\r\n  paginationKeyword,\r\n  paginationString\r\n) => {\r\n  return {\r\n    query: `\r\n    {\r\n      viewer {\r\n        name\r\n      }\r\n      search(query: \"${queryString} user:created-with-love sort:updated-desc\", type: REPOSITORY, ${paginationKeyword}: ${pageCount}, ${paginationString}) {\r\n        repositoryCount\r\n        edges {\r\n          cursor\r\n          node {\r\n            ... on Repository {\r\n              name\r\n              description\r\n              id\r\n              url\r\n              viewerSubscription\r\n              licenseInfo {\r\n                spdxId\r\n              }\r\n            }\r\n          }\r\n        }\r\n        pageInfo {\r\n          startCursor\r\n          endCursor\r\n          hasNextPage\r\n          hasPreviousPage\r\n        }\r\n      }\r\n    }\r\n  `,\r\n  };\r\n};\r\n\r\nexport default githubQuery;\r\n","const RepoInfo = ({ repo }) => {\r\n  let license;\r\n\r\n  switch (repo.licenseInfo?.spdxId) {\r\n    case undefined:\r\n      license = (\r\n        <span\r\n          className=\"px-1 py-0 ms-1 d-inline-block btn btn-sm btn-danger\"\r\n          style={{ fontSize: \".6em\" }}>\r\n          NO LICENSE\r\n        </span>\r\n      );\r\n      break;\r\n    case \"NOASSERTION\":\r\n      license = (\r\n        <span\r\n          className=\"px-1 py-0 ms-1 d-inline-block btn btn-sm btn-warning\"\r\n          style={{ fontSize: \".6em\" }}>\r\n          {repo.licenseInfo.spdxId}\r\n        </span>\r\n      );\r\n      break;\r\n    default:\r\n      license = (\r\n        <span\r\n          className=\"px-1 py-0 ms-1 d-inline-block btn btn-sm btn-outline-success\"\r\n          style={{ fontSize: \".6em\" }}>\r\n          {repo.licenseInfo.spdxId}\r\n        </span>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <li className=\"list-group-item\" key={repo.id.toString()}>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <div className=\"d-flex flex-column\">\r\n          <a className=\"h5 mb-0 text-decoration-none\" href={repo.url}>\r\n            {repo.name}\r\n          </a>\r\n          <p className=\"small\">{repo.description}</p>\r\n        </div>\r\n        <div className=\"text-nowrap ms-3\">\r\n          {license}\r\n          <span\r\n            className={\r\n              \"px-1 py-0 ms-1 d-inline-block btn btn-sm \" +\r\n              (repo.viewerSubscription === \"SUBSCRIBED\"\r\n                ? \"btn-success\"\r\n                : \"btn-outline-secondary\")\r\n            }\r\n            style={{ fontSize: \".6em\" }}>\r\n            {repo.viewerSubscription}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default RepoInfo;\r\n","const SearchBox = ({\r\n  totalCount,\r\n  pageCount,\r\n  queryString,\r\n  onTotalChange,\r\n  onQueryChange,\r\n}) => {\r\n  return (\r\n    <div className=\"d-flex align-items-center bg-light px-3 py-2 small rounded-3\">\r\n      <div className=\"d-flex align-items-center flex-grow-1\">\r\n        <label htmlFor=\"queryString\" className=\"me-2 fw-bold text-secondary\">\r\n          Search\r\n        </label>\r\n        <input\r\n          id=\"queryString\"\r\n          className=\"form-control form-control-sm me-2\"\r\n          type=\"text\"\r\n          value={queryString}\r\n          onChange={(event) => {\r\n            onQueryChange(event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"d-flex align-items-center\">\r\n        <label htmlFor=\"pageCount\" className=\"me-2 fw-bold text-secondary\">\r\n          Show\r\n        </label>\r\n        <input\r\n          id=\"pageCount\"\r\n          className=\"form-control form-control-sm text-center me-2\"\r\n          type=\"number\"\r\n          min=\"1\"\r\n          max=\"100\"\r\n          value={pageCount}\r\n          onChange={(event) => {\r\n            onTotalChange(event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <b className=\"me-2 text-secondary\">Total:</b>\r\n        {totalCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","const NavButtons = ({ start, end, next, previous, onPage }) => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center my-2\">\r\n      {previous && (\r\n        <button\r\n          className=\"btn mx-1 btn-sm btn-primary bi bi-arrow-left\"\r\n          onClick={() => onPage(\"last\", 'before: \"' + start + '\"')}></button>\r\n      )}\r\n      {next && (\r\n        <button\r\n          className=\"btn mx-1 btn-sm btn-primary bi bi-arrow-right\"\r\n          onClick={() => onPage(\"first\", 'after: \"' + end + '\"')}></button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavButtons;\r\n","import { useEffect, useState, useCallback } from \"react\";\r\n\r\nconst useData = (query, github) => {\r\n  let [userName, setUserName] = useState(\"\");\r\n  let [repoList, setRepoList] = useState(null);\r\n  let [pageCount, setPageCount] = useState(10);\r\n  let [queryString, setQueryString] = useState(\"\");\r\n  let [totalCount, setTotalCount] = useState(null);\r\n\r\n  let [startCursor, setStartCursor] = useState(null);\r\n  let [endCursor, setEndCursor] = useState(null);\r\n  let [hasPreviousPage, setHasPreviousPage] = useState(false);\r\n  let [hasNextPage, setHasNextPage] = useState(true);\r\n  let [paginationKeyword, setPaginationKeyword] = useState(\"first\");\r\n  let [paginationString, setPaginationString] = useState(\"\");\r\n\r\n  const fetchData = useCallback(() => {\r\n    const queryText = JSON.stringify(\r\n      query(pageCount, queryString, paginationKeyword, paginationString)\r\n    );\r\n\r\n    fetch(github.baseURL, {\r\n      method: \"POST\",\r\n      headers: github.headers,\r\n      body: queryText,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const viewer = data.data.viewer;\r\n        const repos = data.data.search.edges;\r\n        const total = data.data.search.repositoryCount;\r\n        const start = data.data.search.pageInfo?.startCursor;\r\n        const end = data.data.search.pageInfo?.endCursor;\r\n        const next = data.data.search.pageInfo?.hasNextPage;\r\n        const prev = data.data.search.pageInfo?.hasPreviousPage;\r\n  \r\n        setUserName(viewer?.name);\r\n        setRepoList(repos);\r\n        setTotalCount(total);\r\n        setStartCursor(start);\r\n        setEndCursor(end);\r\n        setHasNextPage(next);\r\n        setHasPreviousPage(prev);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [pageCount, queryString, paginationString, paginationKeyword, github, query]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return [\r\n    userName,\r\n    totalCount,\r\n    pageCount,\r\n    repoList,\r\n    setPageCount,\r\n    queryString,\r\n    setQueryString,\r\n    startCursor,\r\n    endCursor,\r\n    hasNextPage,\r\n    hasPreviousPage,\r\n    setPaginationKeyword,\r\n    setPaginationString\r\n  ];\r\n}\r\n\r\nexport default useData;","import github from \"./db.js\";\r\nimport query from \"./Query\";\r\nimport RepoInfo from \"./RepoInfo\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport NavButtons from \"./NavButtons\";\r\nimport useData from \"./useData.js\";\r\n\r\nfunction App() {\r\n  const [\r\n    userName,\r\n    totalCount,\r\n    pageCount,\r\n    repoList,\r\n    setPageCount,\r\n    queryString,\r\n    setQueryString,\r\n    startCursor,\r\n    endCursor,\r\n    hasNextPage,\r\n    hasPreviousPage,\r\n    setPaginationKeyword,\r\n    setPaginationString\r\n  ] = useData(query, github);\r\n\r\n  return (\r\n    <div className=\"App container mt-5\">\r\n      <h1 className=\"text-primary\">\r\n        <i className=\"bi bi-diagram-2-fill\"></i> Repos\r\n      </h1>\r\n      <p>Hey there {userName}</p>\r\n      <SearchBox\r\n        totalCount={totalCount}\r\n        pageCount={pageCount}\r\n        queryString={queryString}\r\n        onTotalChange={(myNumber) => {\r\n          setPageCount(myNumber);\r\n        }}\r\n        onQueryChange={(myString) => {\r\n          setQueryString(myString);\r\n        }}\r\n      />\r\n      <NavButtons\r\n        start={startCursor}\r\n        end={endCursor}\r\n        next={hasNextPage}\r\n        previous={hasPreviousPage}\r\n        onPage={(myKeyword, myString) => {\r\n          setPaginationKeyword(myKeyword);\r\n          setPaginationString(myString);\r\n        }}\r\n      />\r\n      {repoList && (\r\n        <ul className=\"list-group list-group-flush\">\r\n          {repoList.map((repo) => (\r\n            <RepoInfo key={repo.node.id} repo={repo.node} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      <NavButtons\r\n        start={startCursor}\r\n        end={endCursor}\r\n        next={hasNextPage}\r\n        previous={hasPreviousPage}\r\n        onPage={(myKeyword, myString) => {\r\n          setPaginationKeyword(myKeyword);\r\n          setPaginationString(myString);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./custom.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}